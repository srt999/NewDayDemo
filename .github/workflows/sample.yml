name: sample
on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      API_NAME:
        description: 'The API to deploy'
        required: true
        type: choice
        options:
        #   - ad
          - auth
        #   - devops
        #   - powerbi
          - workspace
      regionName:
          description: 'The region to deploy to'
          required: true
          type: choice
          default: EU
          options:
            - EU
      # environmentName:
      #       description: 'The environment to deploy to'
      #       required: true
      #       type: choice
      #       options:
      #         - Global-Adv-DEV-WEU
      installAppServiceExtensions:
        description: Install App Service Extensions
        default: false
        type: boolean
        required: true
      deployToSlot:
        description: Deploy to slot
        default: true
        type: boolean
        required: true
      buildId:
        type: string
        required: true  
env:
  VSTS_ARM_REST_IGNORE_SSL_ERRORS: true
  region: ${{ github.event.inputs.regionName || 'EU' }}
jobs:
  
  BuildMatrix:
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Set matrix objects
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setmatrixobjects.outputs.matrix }}
    steps:
    - name: setmatrixobjects
      id: setmatrixobjects
      #Below script is to set the matrix objects based on the variable regionconfig
      run: | 
          config=${{vars.regionconfig}}
          echo "matrix=$(echo $config|jq -c .${{env.region}})" >> $GITHUB_OUTPUT
          echo $matrix
      shell: bash
 
  test:
    runs-on: ${{ matrix.object.envRunner }}
    needs: BuildMatrix
    strategy:
      matrix:
        object: ${{fromjson(vars.REGION)}}
      fail-fast: true
      max-parallel: 1
    environment: ${{ matrix.object.envName }}
    steps:
      - run: |
          echo ${{ matrix.object.envName }}
      - run: |
          echo ${{vars.demovar}}
      - run: |
          echo ${{needs.BuildMatrix.outputs.matrix}}
      - run: |
          echo dummy
  auth_deployment:
    name: AUTH_deployment
    runs-on: ubuntu-latest
    needs: 
      - BuildMatrix
    steps:
      - name: setmgitrun
        run: | 
          jformat= ${{tojson(needs.BuildMatrix.outputs.matrix)}}
          echo $jformat
          config=echo $format | jq -c
          echo $config
          jformat1= ${{fromjson(needs.BuildMatrix.outputs.matrix)}}
          echo $jformat1
          config1=echo $format1 | jq -c
          echo $config1
        shell: bash

  # dump_contexts_to_log:
  #   runs-on: ubuntu-latest
  #   needs: 
  #     - BuildMatrix
  #    #if: ${{ inputs.API_NAME == 'auth' }}
  #   strategy:
  #     fail-fast: false
  #     max-parallel: 1
  #     matrix:
  #       environment: ${{ fromJson(needs.BuildMatrix.outputs.matrix) }}
  #   environment: ${{ matrix.environment }}
  #   steps:
  #     - name: Dump GitHub context
  #       env:
  #         GITHUB_CONTEXT: ${{ toJson(github) }}
  #       run: echo "$GITHUB_CONTEXT"
  #     - name: Dump job context
  #       env:
  #         JOB_CONTEXT: ${{ toJson(job) }}
  #       run: echo "$JOB_CONTEXT"
  #     - name: Dump steps context
  #       env:
  #         STEPS_CONTEXT: ${{ toJson(steps) }}
  #       run: echo "$STEPS_CONTEXT"
  #     - name: Dump runner context
  #       env:
  #         RUNNER_CONTEXT: ${{ toJson(runner) }}
  #       run: echo "$RUNNER_CONTEXT"
  #     - name: Dump strategy context
  #       env:
  #         STRATEGY_CONTEXT: ${{ toJson(strategy) }}
  #       run: echo "$STRATEGY_CONTEXT"
  #     - name: Dump matrix context
  #       env:
  #         MATRIX_CONTEXT: ${{ toJson(matrix) }}
  #       run: echo "$MATRIX_CONTEXT"

  #   # uses: ./.github/workflows/reusable.yml
  #   # with:
  #   #   target: ${{ matrix.environment }}
  #   # secrets: inherit

  # #Deploy auth - hardcoding values to be moved to environment variables
  # # auth_deployment:
  # #   name: AUTH_deployment
  # #   needs: 
  # #     - BuildMatrix
  # #    #if: ${{ inputs.API_NAME == 'auth' }}
  # #   strategy:
  # #     fail-fast: false
  # #     max-parallel: 1
  # #     matrix:
  # #       environment: ${{ fromJson(needs.BuildMatrix.outputs.matrix) }}
  # #   uses: ./.github/workflows/reusable.yml
  # #   with:
  # #     target: ${{ matrix.environment }}
  # #   secrets: inherit

