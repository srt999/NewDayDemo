name: Terraform

on:
  push:
    branches:
      - "*"
      #- '!main'

jobs:
  check-code:
    runs-on: ubuntu-latest
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    # Set the working directory to vnet for the config files
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses:
          actions/checkout@v3
          # Install the selected version of Terraform CLI
      - name: Azure login
        uses: azure/login@v2
        with:
            client-id: ${{ secrets.ARM_CLIENT_ID }}
            tenant-id: ${{ secrets.ARM_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.3.9'
          
            # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: 'terraform'
        # Run a terraform fmt to check syntax
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
      # Run a terraform validate
      - name: Terraform Validate
        id: validate
        # Run even if formatting fails
        if: success() || failure()
        run: terraform validate -no-color
        # Run a terraform validate
      - name: Terraform Plan
        id: plan
        # Run even if formatting fails
        if: success() || failure()
        run: terraform plan -var-file='./environments/dev.tfvars' -out="demoplan.tf"
